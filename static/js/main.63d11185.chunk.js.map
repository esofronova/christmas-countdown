{"version":3,"sources":["app.js","index.js"],"names":["ChristmasCountdown","numberOfSnowflakes","Array","from","length","k","i","christmasDate","Date","getTime","useState","today","setToday","useEffect","interval","setInterval","clearInterval","timeLeft","data","number","Math","floor","value","className","Container","map","item","index","randomX","random","window","innerWidth","randomY","innerHeight","style","left","top","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAIe,SAASA,IAErB,IAAMC,EAAqBC,MAAMC,KAAK,CAAEC,OAAQ,MAAO,SAACC,EAAGC,GAAJ,OAAUA,OAE3DC,EAAgB,IAAIC,KAAK,yBAAyBC,UACxD,EAAwBC,oBAAS,IAAIF,MAAOC,WAA5C,mBAAKE,EAAL,KAAYC,EAAZ,KAEAC,qBAAU,WACP,IAAMC,EAAWC,aAAY,WAC1BH,GAAS,IAAIJ,MAAOC,aACpB,KACH,OAAO,kBAAMO,cAAcF,MAC3B,IAEH,IAAIG,EAAWV,EAAgBI,EAMzBO,EAAO,CACV,CACGC,OAPKC,KAAKC,MAAMJ,EAAQ,OAQxBK,MAAO,QAEV,CACGH,OAVMC,KAAKC,MAAOJ,EAAQ,MAAT,MAWjBK,MAAO,SAEV,CACGH,OAbQC,KAAKC,MAAOJ,EAAQ,KAAT,KAcnBK,MAAO,WAEV,CACGH,OAhBQC,KAAKC,MAAOJ,EAAQ,IAAkB,KAiB9CK,MAAO,YAIb,OACG,sBAAKC,UAAU,8DAAf,UACG,cAACC,EAAA,EAAD,CAAWD,UAAU,sBAArB,SACG,gCACG,oBAAIA,UAAU,mCAAd,iCACA,qBAAKA,UAAU,8DAAf,uDACA,qBAAKA,UAAU,6EAAf,SACIL,EAAKO,KAAI,SAACC,EAAMC,GACd,OACG,sBAAiBJ,UAAU,sFAA3B,UACG,oBAAIA,UAAU,OAAd,SAAsBG,EAAKP,SAC3B,6BAAKO,EAAKJ,UAFHK,QAOnB,qBAAKJ,UAAU,8DAAf,uEAGN,qBAAKA,UAAU,qCAAf,SACItB,EAAmBwB,KAAI,SAACE,GACtB,IAAIC,EAAUR,KAAKC,MAAMD,KAAKS,SAAWC,OAAOC,YAC5CC,EAAUZ,KAAKC,MAAMD,KAAKS,SAAWC,OAAOG,aAChD,OACG,qBAEGV,UAAU,6CACVW,MAAO,CAAEC,KAAMP,EAASQ,IAAKJ,IAFxBL,WC9D1BU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.63d11185.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport './style.scss';\n\nexport default function ChristmasCountdown() {\n\n   const numberOfSnowflakes = Array.from({ length: 500 }, (k, i) => i++);\n\n   const christmasDate = new Date(\"Dec 25, 2021 00:00:00\").getTime();\n   let [today, setToday] = useState(new Date().getTime());\n\n   useEffect(() => {\n      const interval = setInterval(() => {\n         setToday(new Date().getTime());\n      }, 1000);\n      return () => clearInterval(interval);\n   }, []);\n\n   let timeLeft = christmasDate - today;\n   let days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));\n   let hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n   let minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));\n   let seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);\n\n   const data = [\n      {\n         number: days,\n         value: \"days\"\n      },\n      {\n         number: hours,\n         value: \"hours\"\n      },\n      {\n         number: minutes,\n         value: \"minutes\"\n      },\n      {\n         number: seconds,\n         value: \"seconds\"\n      }\n   ];\n\n   return (\n      <div className=\"christmas-countdown h-100 position-relative overflow-hidden\">\n         <Container className=\"py-5 h-100 centered\">\n            <div>\n               <h1 className=\"header text-white text-uppercase\">Christmas is coming</h1>\n               <div className=\"text-center text-white text-uppercase mt-5 ls-3 text-shadow\">It's the most wonderful time of the year!</div>\n               <div className=\"d-flex justify-content-around align-items-center mt-5 mx-auto py-4 circles\">\n                  {data.map((item, index) => {\n                     return (\n                        <div key={index} className=\"circle centered rounded-circle border border-white border-3 text-white text-center \">\n                           <h1 className=\"mb-0\">{item.number}</h1>\n                           <h5>{item.value}</h5>\n                        </div>\n                     );\n                  })}\n               </div>\n               <div className=\"text-center text-white text-uppercase mt-5 ls-3 text-shadow\">\"We wish you a Merry Christmas and a Happy New Year\"</div>\n            </div>\n         </Container>\n         <div className=\"snow position-absolute w-100 h-100\">\n            {numberOfSnowflakes.map((index) => {\n               let randomX = Math.floor(Math.random() * window.innerWidth);\n               let randomY = Math.floor(Math.random() * window.innerHeight);\n               return (\n                  <div\n                     key={index}\n                     className=\"snowflake rounded-circle position-absolute\"\n                     style={{ left: randomX, top: randomY }}\n                  ></div>\n               );\n            })}\n         </div>\n      </div>\n   );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './classes.scss';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}